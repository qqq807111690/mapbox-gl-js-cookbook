(window.webpackJsonp=window.webpackJsonp||[]).push([[10,51],{158:function(t,e,n){"use strict";var i=n(32),o=n(97)(2);i(i.P+i.F*!n(107)([].filter,!0),"Array",{filter:function(t){return o(this,t,arguments[1])}})},179:function(t,e,n){"use strict";var i=n(32),o=n(97)(0),r=n(107)([].forEach,!0);i(i.P+i.F*!r,"Array",{forEach:function(t){return o(this,t,arguments[1])}})},192:function(t,e,n){"use strict";var i={},o={},r=34,s=10,a=13;function l(t){return new Function("d","return {"+t.map(function(t,e){return JSON.stringify(t)+": d["+e+"]"}).join(",")+"}")}function c(t){var e=Object.create(null),n=[];return t.forEach(function(t){for(var i in t)i in e||n.push(e[i]=i)}),n}function u(t,e){var n=t+"",i=n.length;return i<e?new Array(e-i+1).join(0)+n:n}function p(t){var e,n=t.getUTCHours(),i=t.getUTCMinutes(),o=t.getUTCSeconds(),r=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((e=t.getUTCFullYear())<0?"-"+u(-e,6):e>9999?"+"+u(e,6):u(e,4))+"-"+u(t.getUTCMonth()+1,2)+"-"+u(t.getUTCDate(),2)+(r?"T"+u(n,2)+":"+u(i,2)+":"+u(o,2)+"."+u(r,3)+"Z":o?"T"+u(n,2)+":"+u(i,2)+":"+u(o,2)+"Z":i||n?"T"+u(n,2)+":"+u(i,2)+"Z":"")}var f=function(t){var e=new RegExp('["'+t+"\n\r]"),n=t.charCodeAt(0);function u(t,e){var l,c=[],u=t.length,p=0,f=0,d=u<=0,v=!1;function h(){if(d)return o;if(v)return v=!1,i;var e,l,c=p;if(t.charCodeAt(c)===r){for(;p++<u&&t.charCodeAt(p)!==r||t.charCodeAt(++p)===r;);return(e=p)>=u?d=!0:(l=t.charCodeAt(p++))===s?v=!0:l===a&&(v=!0,t.charCodeAt(p)===s&&++p),t.slice(c+1,e-1).replace(/""/g,'"')}for(;p<u;){if((l=t.charCodeAt(e=p++))===s)v=!0;else if(l===a)v=!0,t.charCodeAt(p)===s&&++p;else if(l!==n)continue;return t.slice(c,e)}return d=!0,t.slice(c,u)}for(t.charCodeAt(u-1)===s&&--u,t.charCodeAt(u-1)===a&&--u;(l=h())!==o;){for(var g=[];l!==i&&l!==o;)g.push(l),l=h();e&&null==(g=e(g,f++))||c.push(g)}return c}function f(e,n){return e.map(function(e){return n.map(function(t){return v(e[t])}).join(t)})}function d(e){return e.map(v).join(t)}function v(t){return null==t?"":t instanceof Date?p(t):e.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,e){var n,i,o=u(t,function(t,o){if(n)return n(t,o-1);i=t,n=e?function(t,e){var n=l(t);return function(i,o){return e(n(i),o,t)}}(t,e):l(t)});return o.columns=i||[],o},parseRows:u,format:function(e,n){return null==n&&(n=c(e)),[n.map(v).join(t)].concat(f(e,n)).join("\n")},formatBody:function(t,e){return null==e&&(e=c(t)),f(t,e).join("\n")},formatRows:function(t){return t.map(d).join("\n")}}},d=f(","),v=d.parse,h=(d.parseRows,d.format,d.formatBody,d.formatRows,f("\t")),g=h.parse;h.parseRows,h.format,h.formatBody,h.formatRows;n.d(e,"b",function(){return f}),n.d(e,"a",function(){return v}),n.d(e,"c",function(){return g})},201:function(t,e,n){"use strict";n.d(e,"b",function(){return d}),n.d(e,"c",function(){return v}),n.d(e,"a",function(){return h});var i=n(237),o=n.n(i);function r(t){if(t=t&&t.positions||t,!Array.isArray(t)&&!ArrayBuffer.isView(t))throw new Error("invalid polygon")}function s(t){return t.length>=1&&t[0].length>=2&&Number.isFinite(t[0][0])}function a(t){var e=t[0],n=t[t.length-1];return e[0]===n[0]&&e[1]===n[1]&&e[2]===n[2]}function l(t,e,n,i){for(var o=0;o<e;o++)if(t[n+o]!==t[i-e+o])return!1;return!0}function c(t,e,n,i){for(var o=e,r=n.length,s=0;s<r;s++)for(var l=0;l<i;l++)t[o++]=n[s][l]||0;if(!a(n))for(var c=0;c<i;c++)t[o++]=n[0][c]||0;return o}function u(t,e,n,i){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5?arguments[5]:void 0,s=(r=r||n.length)-o;if(s<=0)return e;for(var a=e,c=0;c<s;c++)t[a++]=n[o+c];if(!l(n,i,o,r))for(var u=0;u<i;u++)t[a++]=n[o+u];return a}function p(t){return(a(t)?0:1)+t.length}function f(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3?arguments[3]:void 0;return n>=(i=i||t.length)?0:(l(t,e,n,i)?0:1)+(i-n)/e}function d(t,e){if(r(t),t.positions){var n=t,i=n.positions,o=n.holeIndices;if(o){for(var a=0,l=0;l<=o.length;l++)a+=f(t.positions,e,o[l-1],o[l]);return a}t=i}if(Number.isFinite(t[0]))return f(t,e);if(!s(t)){var c=0,u=!0,d=!1,v=void 0;try{for(var h,g=t[Symbol.iterator]();!(u=(h=g.next()).done);u=!0){c+=p(h.value)}}catch(t){d=!0,v=t}finally{try{u||null==g.return||g.return()}finally{if(d)throw v}}return c}return p(t)}function v(t,e,n){r(t),n=n||d(t,e);var i=new Float64Array(n*e),o=[];if(t.positions){var a=t,l=a.positions,p=a.holeIndices;if(p){for(var f=0,v=0;v<=p.length;v++)f=u(i,f,l,e,p[v-1],p[v]),o.push(f);return o.pop(),{positions:i,holeIndices:o}}t=l}if(Number.isFinite(t[0]))return u(i,0,t,e),{positions:i,holeIndices:null};if(!s(t)){var h=0,g=!0,y=!1,x=void 0;try{for(var m,P=t[Symbol.iterator]();!(g=(m=P.next()).done);g=!0){h=c(i,h,m.value,e),o.push(h)}}catch(t){y=!0,x=t}finally{try{g||null==P.return||P.return()}finally{if(y)throw x}}return o.pop(),{positions:i,holeIndices:o}}return c(i,0,t,e),{positions:i,holeIndices:null}}function h(t,e){var n=null;return t.holeIndices&&(n=t.holeIndices.map(function(t){return t/e})),o()(t.positions,n,e)}},208:function(t,e,n){"use strict";var i=n(192);function o(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var r=function(t,e){return fetch(t,e).then(o)};function s(t){return function(e,n,i){return 2===arguments.length&&"function"==typeof n&&(i=n,n=void 0),r(e,n).then(function(e){return t(e,i)})}}var a=s(i.a);s(i.c);function l(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var c=function(t,e){return fetch(t,e).then(l)};function u(t){return function(e,n){return r(e,n).then(function(e){return(new DOMParser).parseFromString(e,t)})}}u("application/xml"),u("text/html"),u("image/svg+xml");n.d(e,"a",function(){return a}),n.d(e,"b",function(){return c})},235:function(t,e){},237:function(t,e,n){"use strict";function i(t,e,n){n=n||2;var i,a,l,c,u,d,v,g=e&&e.length,y=g?e[0]*n:t.length,x=o(t,0,y,n,!0),m=[];if(!x||x.next===x.prev)return m;if(g&&(x=function(t,e,n,i){var s,a,l,c,u,d=[];for(s=0,a=e.length;s<a;s++)l=e[s]*i,c=s<a-1?e[s+1]*i:t.length,(u=o(t,l,c,i,!1))===u.next&&(u.steiner=!0),d.push(h(u));for(d.sort(p),s=0;s<d.length;s++)f(d[s],n),n=r(n,n.next);return n}(t,e,x,n)),t.length>80*n){i=l=t[0],a=c=t[1];for(var P=n;P<y;P+=n)(u=t[P])<i&&(i=u),(d=t[P+1])<a&&(a=d),u>l&&(l=u),d>c&&(c=d);v=0!==(v=Math.max(l-i,c-a))?1/v:0}return s(x,m,n,i,a,v),m}function o(t,e,n,i,o){var r,s;if(o===O(t,e,n,i)>0)for(r=e;r<n;r+=i)s=S(r,t[r],t[r+1],s);else for(r=n-i;r>=e;r-=i)s=S(r,t[r],t[r+1],s);return s&&m(s,s.next)&&(_(s),s=s.next),s}function r(t,e){if(!t)return t;e||(e=t);var n,i=t;do{if(n=!1,i.steiner||!m(i,i.next)&&0!==x(i.prev,i,i.next))i=i.next;else{if(_(i),(i=e=i.prev)===i.next)break;n=!0}}while(n||i!==e);return e}function s(t,e,n,i,o,p,f){if(t){!f&&p&&function(t,e,n,i){var o=t;do{null===o.z&&(o.z=v(o.x,o.y,e,n,i)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==t);o.prevZ.nextZ=null,o.prevZ=null,function(t){var e,n,i,o,r,s,a,l,c=1;do{for(n=t,t=null,r=null,s=0;n;){for(s++,i=n,a=0,e=0;e<c&&(a++,i=i.nextZ);e++);for(l=c;a>0||l>0&&i;)0!==a&&(0===l||!i||n.z<=i.z)?(o=n,n=n.nextZ,a--):(o=i,i=i.nextZ,l--),r?r.nextZ=o:t=o,o.prevZ=r,r=o;n=i}r.nextZ=null,c*=2}while(s>1)}(o)}(t,i,o,p);for(var d,h,g=t;t.prev!==t.next;)if(d=t.prev,h=t.next,p?l(t,i,o,p):a(t))e.push(d.i/n),e.push(t.i/n),e.push(h.i/n),_(t),t=h.next,g=h.next;else if((t=h)===g){f?1===f?s(t=c(r(t),e,n),e,n,i,o,p,2):2===f&&u(t,e,n,i,o,p):s(r(t),e,n,i,o,p,1);break}}}function a(t){var e=t.prev,n=t,i=t.next;if(x(e,n,i)>=0)return!1;for(var o=t.next.next;o!==t.prev;){if(g(e.x,e.y,n.x,n.y,i.x,i.y,o.x,o.y)&&x(o.prev,o,o.next)>=0)return!1;o=o.next}return!0}function l(t,e,n,i){var o=t.prev,r=t,s=t.next;if(x(o,r,s)>=0)return!1;for(var a=o.x<r.x?o.x<s.x?o.x:s.x:r.x<s.x?r.x:s.x,l=o.y<r.y?o.y<s.y?o.y:s.y:r.y<s.y?r.y:s.y,c=o.x>r.x?o.x>s.x?o.x:s.x:r.x>s.x?r.x:s.x,u=o.y>r.y?o.y>s.y?o.y:s.y:r.y>s.y?r.y:s.y,p=v(a,l,e,n,i),f=v(c,u,e,n,i),d=t.prevZ,h=t.nextZ;d&&d.z>=p&&h&&h.z<=f;){if(d!==t.prev&&d!==t.next&&g(o.x,o.y,r.x,r.y,s.x,s.y,d.x,d.y)&&x(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,h!==t.prev&&h!==t.next&&g(o.x,o.y,r.x,r.y,s.x,s.y,h.x,h.y)&&x(h.prev,h,h.next)>=0)return!1;h=h.nextZ}for(;d&&d.z>=p;){if(d!==t.prev&&d!==t.next&&g(o.x,o.y,r.x,r.y,s.x,s.y,d.x,d.y)&&x(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;h&&h.z<=f;){if(h!==t.prev&&h!==t.next&&g(o.x,o.y,r.x,r.y,s.x,s.y,h.x,h.y)&&x(h.prev,h,h.next)>=0)return!1;h=h.nextZ}return!0}function c(t,e,n){var i=t;do{var o=i.prev,s=i.next.next;!m(o,s)&&P(o,i,i.next,s)&&L(o,s)&&L(s,o)&&(e.push(o.i/n),e.push(i.i/n),e.push(s.i/n),_(i),_(i.next),i=t=s),i=i.next}while(i!==t);return r(i)}function u(t,e,n,i,o,a){var l=t;do{for(var c=l.next.next;c!==l.prev;){if(l.i!==c.i&&y(l,c)){var u=w(l,c);return l=r(l,l.next),u=r(u,u.next),s(l,e,n,i,o,a),void s(u,e,n,i,o,a)}c=c.next}l=l.next}while(l!==t)}function p(t,e){return t.x-e.x}function f(t,e){if(e=function(t,e){var n,i=e,o=t.x,r=t.y,s=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){var a=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(a<=o&&a>s){if(s=a,a===o){if(r===i.y)return i;if(r===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!n)return null;if(o===s)return n;var l,c=n,u=n.x,p=n.y,f=1/0;i=n;do{o>=i.x&&i.x>=u&&o!==i.x&&g(r<p?o:s,r,u,p,r<p?s:o,r,i.x,i.y)&&(l=Math.abs(r-i.y)/(o-i.x),L(i,t)&&(l<f||l===f&&(i.x>n.x||i.x===n.x&&d(n,i)))&&(n=i,f=l)),i=i.next}while(i!==c);return n}(t,e)){var n=w(e,t);r(n,n.next)}}function d(t,e){return x(t.prev,t,e.prev)<0&&x(e.next,t,t.next)<0}function v(t,e,n,i,o){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*o)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*o)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function h(t){var e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function g(t,e,n,i,o,r,s,a){return(o-s)*(e-a)-(t-s)*(r-a)>=0&&(t-s)*(i-a)-(n-s)*(e-a)>=0&&(n-s)*(r-a)-(o-s)*(i-a)>=0}function y(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&P(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(L(t,e)&&L(e,t)&&function(t,e){var n=t,i=!1,o=(t.x+e.x)/2,r=(t.y+e.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&o<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(x(t.prev,t,e.prev)||x(t,e.prev,e))||m(t,e)&&x(t.prev,t,t.next)>0&&x(e.prev,e,e.next)>0)}function x(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function m(t,e){return t.x===e.x&&t.y===e.y}function P(t,e,n,i){var o=C(x(t,e,n)),r=C(x(t,e,i)),s=C(x(n,i,t)),a=C(x(n,i,e));return o!==r&&s!==a||(!(0!==o||!b(t,n,e))||(!(0!==r||!b(t,i,e))||(!(0!==s||!b(n,t,i))||!(0!==a||!b(n,e,i)))))}function b(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function C(t){return t>0?1:t<0?-1:0}function L(t,e){return x(t.prev,t,t.next)<0?x(t,e,t.next)>=0&&x(t,t.prev,e)>=0:x(t,e,t.prev)<0||x(t,t.next,e)<0}function w(t,e){var n=new A(t.i,t.x,t.y),i=new A(e.i,e.x,e.y),o=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=o,o.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function S(t,e,n,i){var o=new A(t,e,n);return i?(o.next=i.next,o.prev=i,i.next.prev=o,i.next=o):(o.prev=o,o.next=o),o}function _(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function A(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(t,e,n,i){for(var o=0,r=e,s=n-i;r<n;r+=i)o+=(t[s]-t[r])*(t[r+1]+t[s+1]),s=r;return o}t.exports=i,t.exports.default=i,i.deviation=function(t,e,n,i){var o=e&&e.length,r=o?e[0]*n:t.length,s=Math.abs(O(t,0,r,n));if(o)for(var a=0,l=e.length;a<l;a++){var c=e[a]*n,u=a<l-1?e[a+1]*n:t.length;s-=Math.abs(O(t,c,u,n))}var p=0;for(a=0;a<i.length;a+=3){var f=i[a]*n,d=i[a+1]*n,v=i[a+2]*n;p+=Math.abs((t[f]-t[v])*(t[d+1]-t[f+1])-(t[f]-t[d])*(t[v+1]-t[f+1]))}return 0===s&&0===p?0:Math.abs((p-s)/s)},i.flatten=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},i=0,o=0;o<t.length;o++){for(var r=0;r<t[o].length;r++)for(var s=0;s<e;s++)n.vertices.push(t[o][r][s]);o>0&&(i+=t[o-1].length,n.holes.push(i))}return n}},243:function(t,e){e.f=Object.getOwnPropertySymbols},255:function(t,e,n){"use strict";var i=n(58),o=n(59),r=n(64),s=n(63),a=n(87),l=n(65),c=n(143),u=n(603),p=n(612),f=n(472),d=n(426),v=n(479),h=n(201),g=n(78),y=n(668),x=g.a.Tesselator,m=y.a.fp64LowPart,P=function(t){function e(t){var n=t.data,o=t.getGeometry,a=t.fp64,l=t.positionFormat,c=t.IndexType,u=void 0===c?Uint32Array:c;return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).call(this,{data:n,getGeometry:o,fp64:a,positionFormat:l,attributes:{positions:{size:3},positions64xyLow:{size:2,fp64Only:!0},vertexValid:{type:Uint8ClampedArray,size:1},indices:{type:u,size:1}}}))}return Object(l.a)(e,t),Object(o.a)(e,[{key:"get",value:function(t){return"indices"===t?this.attributes.indices.subarray(0,this.vertexCount):this.attributes[t]}},{key:"getGeometrySize",value:function(t){return h.b(t,this.positionSize)}},{key:"updateGeometryAttributes",value:function(t,e){t=h.c(t,this.positionSize,e.geometrySize),this._updateIndices(t,e),this._updatePositions(t,e)}},{key:"_updateIndices",value:function(t,e){var n=e.geometryIndex,i=e.vertexStart,o=e.indexStart,r=this.attributes,s=this.indexLayout,a=this.typedArrayManager,l=r.indices,c=l.length,u=o,p=h.a(t,this.positionSize);c<u+p.length&&(c=2*(u+p.length),l=a.allocate(l,c,{type:l.constructor,size:1,copy:!0}));for(var f=0;f<p.length;f++)l[u++]=p[f]+i;s[n]=p.length,r.indices=l}},{key:"_updatePositions",value:function(t,e){for(var n=e.vertexStart,i=e.geometrySize,o=this.attributes,r=o.positions,s=o.positions64xyLow,a=o.vertexValid,l=this.fp64,c=this.positionSize,u=n,p=t.positions,f=t.holeIndices,d=0;d<i;d++){var v=p[d*c],h=p[d*c+1],g=c>2?p[d*c+2]:0;r[3*u]=v,r[3*u+1]=h,r[3*u+2]=g,l&&(s[2*u]=m(v),s[2*u+1]=m(h)),a[u]=1,u++}if(f)for(var y=0;y<f.length;y++)a[n+f[y]/c-1]=0;a[n+i-1]=0}}]),e}(x),b="\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying float isValid;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec2 positions64xyLow;\n  vec2 nextPositions64xyLow;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNG_LAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_AUTO_OFFSET) {\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n  vec3 pos;\n  vec2 pos64xyLow;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64xyLow = mix(props.positions64xyLow, props.nextPositions64xyLow, vertexPositions.x);\n  isValid = vertexValid;\n#else\n  pos = props.positions;\n  pos64xyLow = props.positions64xyLow;\n  isValid = 1.0;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n  }\n\n  vec4 position_commonspace;\n  gl_Position = project_position_to_clipspace(pos, pos64xyLow, vec3(0.), position_commonspace);\n\n  if (extruded) {\n#ifdef IS_SIDE_VERTEX\n    normal = vec3(props.positions.y - props.nextPositions.y, props.nextPositions.x - props.positions.x, 0.0);\n    normal = project_offset_normal(normal);\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity) / 255.0;\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity) / 255.0;\n  }\n  picking_setPickingColor(props.pickingColors);\n}\n",C="#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec2 positions64xyLow;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n".concat(b,"\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64xyLow = positions64xyLow;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n"),L="#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec2 instancePositions64xyLow;\nattribute vec3 nextPositions;\nattribute vec2 nextPositions64xyLow;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n".concat(b,"\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = instancePositions;\n  props.positions64xyLow = instancePositions64xyLow;\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n  props.nextPositions = nextPositions;\n  props.nextPositions64xyLow = nextPositions64xyLow;\n\n  calculatePosition(props);\n}\n");n.d(e,"a",function(){return O});var w=[0,0,0,255],S=new u.a,_={filled:!0,extruded:!1,wireframe:!1,fp64:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:function(t){return t.polygon}},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:S},A={enter:function(t,e){return e.length?e.subarray(e.length-t.length):t}},O=function(t){function e(){return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(l.a)(e,t),Object(o.a)(e,[{key:"getShaders",value:function(t){return{vs:t,fs:"#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid < 0.5) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n",defines:{},modules:[this.use64bitProjection()?"project64":"project32","gouraud-lighting","picking"]}}},{key:"initializeState",value:function(){var t=this,e=this.context.gl;this.setState({numInstances:0,polygonTesselator:new P({IndexType:!e||Object(p.b)(e,f.a.ELEMENT_INDEX_UINT32)?Uint32Array:Uint16Array})});var n=this.getAttributeManager();n.remove(["instancePickingColors"]),n.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:!0},positions:{size:3,transition:A,accessor:"getPolygon",update:this.calculatePositions,noAlloc:!0,shaderAttributes:{positions:{offset:0,divisor:0},instancePositions:{offset:0,divisor:1},nextPositions:{offset:12,divisor:1}}},positions64xyLow:{size:2,update:this.calculatePositionsLow,noAlloc:!0,shaderAttributes:{positions64xyLow:{offset:0,divisor:0},instancePositions64xyLow:{offset:0,divisor:1},nextPositions64xyLow:{offset:8,divisor:1}}},vertexValid:{size:1,divisor:1,type:5121,update:this.calculateVertexValid,noAlloc:!0},elevations:{size:1,transition:A,accessor:"getElevation",shaderAttributes:{elevations:{divisor:0},instanceElevations:{divisor:1}}},fillColors:{alias:"colors",size:4,type:5121,transition:A,accessor:"getFillColor",defaultValue:w,shaderAttributes:{fillColors:{divisor:0},instanceFillColors:{divisor:1}}},lineColors:{alias:"colors",size:4,type:5121,transition:A,accessor:"getLineColor",defaultValue:w,shaderAttributes:{lineColors:{divisor:0},instanceLineColors:{divisor:1}}},pickingColors:{size:3,type:5121,accessor:function(e,n){var i=n.index,o=n.target;return t.encodePickingColor(i,o)},shaderAttributes:{pickingColors:{divisor:0},instancePickingColors:{divisor:1}}}})}},{key:"draw",value:function(t){var e=t.uniforms,n=this.props,i=n.extruded,o=n.filled,r=n.wireframe,s=n.elevationScale,a=this.state,l=a.topModel,c=a.sideModel,u=a.polygonTesselator,p=Object.assign({},e,{extruded:Boolean(i),elevationScale:s});c&&(c.setInstanceCount(u.instanceCount-1),c.setUniforms(p),r&&(c.setDrawMode(3),c.setUniforms({isWireframe:!0}).draw()),o&&(c.setDrawMode(6),c.setUniforms({isWireframe:!1}).draw())),l&&(l.setVertexCount(u.get("indices").length),l.setUniforms(p).draw())}},{key:"updateState",value:function(t){Object(a.a)(Object(s.a)(e.prototype),"updateState",this).call(this,t),this.updateGeometry(t);var n=t.props,i=t.oldProps,o=this.getAttributeManager();(n.fp64!==i.fp64||n.filled!==i.filled||n.extruded!==i.extruded)&&(this.state.models&&this.state.models.forEach(function(t){return t.delete()}),this.setState(this._getModels(this.context.gl)),o.invalidateAll())}},{key:"updateGeometry",value:function(t){var e=t.props,n=t.oldProps,i=t.changeFlags;if(i.dataChanged||e.fp64!==n.fp64||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPolygon)){var o=this.state.polygonTesselator;o.updateGeometry({data:e.data,getGeometry:e.getPolygon,positionFormat:e.positionFormat,fp64:this.use64bitPositions()}),this.setState({numInstances:o.instanceCount,bufferLayout:o.bufferLayout}),this.getAttributeManager().invalidateAll()}}},{key:"_getModels",value:function(t){var e,n,i=this.props,o=i.id,r=i.filled,s=i.extruded;if(r){var a=this.getShaders(C);a.defines.NON_INSTANCED_MODEL=1,e=new d.a(t,Object.assign({},a,{id:"".concat(o,"-top"),drawMode:4,attributes:{vertexPositions:new Float32Array([0,1])},uniforms:{isWireframe:!1,isSideVertex:!1},vertexCount:0,isIndexed:!0,shaderCache:this.context.shaderCache}))}return s&&((n=new d.a(t,Object.assign({},this.getShaders(L),{id:"".concat(o,"-side"),geometry:new v.a({drawMode:1,vertexCount:4,attributes:{vertexPositions:{size:2,value:new Float32Array([1,1,0,1,0,0,1,0])}}}),instanceCount:0,isInstanced:1,shaderCache:this.context.shaderCache}))).userData.excludeAttributes={indices:!0}),{models:[n,e].filter(Boolean),topModel:e,sideModel:n}}},{key:"calculateIndices",value:function(t){var e=this.state.polygonTesselator;t.bufferLayout=e.indexLayout,t.value=e.get("indices")}},{key:"calculatePositions",value:function(t){var e=this.state.polygonTesselator;t.bufferLayout=e.bufferLayout,t.value=e.get("positions")}},{key:"calculatePositionsLow",value:function(t){var e=this.use64bitPositions();t.constant=!e,t.value=e?this.state.polygonTesselator.get("positions64xyLow"):new Float32Array(2)}},{key:"calculateVertexValid",value:function(t){t.value=this.state.polygonTesselator.get("vertexValid")}},{key:"clearPickingColor",value:function(t){for(var e=this.decodePickingColor(t),n=this.state.polygonTesselator.bufferLayout,i=n[e],o=0,r=0;r<e;r++)o+=n[r];var s=this.getAttributeManager().attributes.pickingColors,a=s.value,l=o+i;a.fill(0,3*o,3*l),s.update({value:a})}}]),e}(c.a);O.layerName="SolidPolygonLayer",O.defaultProps=_},256:function(t,e,n){"use strict";var i=n(58),o=n(59),r=n(64),s=n(63),a=n(87),l=n(65),c=n(143),u=n(426),p=n(479),f=n(78),d=n(668),v=f.a.Tesselator,h=d.a.fp64LowPart,g=function(t){function e(t){var n=t.data,o=t.getGeometry,a=t.positionFormat,l=t.fp64;return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).call(this,{data:n,getGeometry:o,fp64:l,positionFormat:a,attributes:{startPositions:{size:3},endPositions:{size:3},leftPositions:{size:3},rightPositions:{size:3},startEndPositions64XyLow:{size:4,fp64Only:!0},neighborPositions64XyLow:{size:4,fp64Only:!0}}}))}return Object(l.a)(e,t),Object(o.a)(e,[{key:"get",value:function(t){return this.attributes[t]}},{key:"getGeometrySize",value:function(t){return Math.max(0,this.getPathLength(t)-1)}},{key:"updateGeometryAttributes",value:function(t,e){var n=this.attributes,i=n.startPositions,o=n.endPositions,r=n.leftPositions,s=n.rightPositions,a=n.startEndPositions64XyLow,l=n.neighborPositions64XyLow,c=this.fp64,u=e.geometrySize+1;if(!(u<2))for(var p,f=this.isClosed(t),d=this.getPointOnPath(t,0),v=this.getPointOnPath(t,1),g=f?this.getPointOnPath(t,u-2):d,y=e.vertexStart,x=1;x<u;y++,x++)p=x+1<u?this.getPointOnPath(t,x+1):f?this.getPointOnPath(t,1):v,i[3*y]=d[0],i[3*y+1]=d[1],i[3*y+2]=d[2]||0,o[3*y]=v[0],o[3*y+1]=v[1],o[3*y+2]=v[2]||0,r[3*y]=g[0],r[3*y+1]=g[1],r[3*y+2]=g[2]||0,s[3*y]=p[0],s[3*y+1]=p[1],s[3*y+2]=p[2]||0,c&&(a[4*y]=h(d[0]),a[4*y+1]=h(d[1]),a[4*y+2]=h(v[0]),a[4*y+3]=h(v[1]),l[4*y]=h(g[0]),l[4*y+1]=h(g[1]),l[4*y+2]=h(p[0]),l[4*y+3]=h(p[1])),g=d,d=v,v=p}},{key:"getPathLength",value:function(t){return Number.isFinite(t[0])?t.length/this.positionSize:t.length}},{key:"getPointOnPath",value:function(t,e){if(Number.isFinite(t[0])){var n=this.positionSize;return[t[e*n],t[e*n+1],3===n?t[e*n+2]:0]}return t[e]}},{key:"isClosed",value:function(t){var e=this.getPathLength(t),n=this.getPointOnPath(t,0),i=this.getPointOnPath(t,e-1);return n[0]===i[0]&&n[1]===i[1]&&n[2]===i[2]}}]),e}(v),y="#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float jointType;\nuniform float miterLimit;\nuniform float alignMode;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vDashArray;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nfloat mod2(float a, float b) {\n  return a - floor(a / b) * b;\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\nbool dash_isFragInGap() {\n  float solidLength = vDashArray.x;\n  float gapLength = vDashArray.y;\n\n  float unitLength = solidLength + gapLength;\n\n  if (unitLength == 0.0) {\n    return false;\n  }\n\n  unitLength = mix(\n    unitLength,\n    vPathLength / round(vPathLength / unitLength),\n    alignMode\n  );\n\n  float offset = alignMode * solidLength / 2.0;\n\n  return gapLength > 0.0 &&\n    vPathPosition.y >= 0.0 &&\n    vPathPosition.y <= vPathLength &&\n    mod2(vPathPosition.y + offset, unitLength) > solidLength;\n}\n\nvoid main(void) {\n  if (jointType > 0.0 && vMiterLength > 0.0 && length(vCornerOffset) > 1.0) {\n    discard;\n  }\n  if (jointType == 0.0 && vMiterLength > miterLimit) {\n    discard;\n  }\n  if (vColor.a == 0.0 || dash_isFragInGap()) {\n    discard;\n  }\n  gl_FragColor = vColor;\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n";n.d(e,"a",function(){return b});var x=[0,0,0,255],m={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},rounded:!1,miterLimit:{type:"number",min:0,value:4},fp64:!1,dashJustified:!1,billboard:!1,getPath:{type:"accessor",value:function(t){return t.path}},getColor:{type:"accessor",value:x},getWidth:{type:"accessor",value:1},getDashArray:{type:"accessor",value:[0,0]}},P={enter:function(t,e){return e.length?e.subarray(e.length-t.length):t}},b=function(t){function e(){return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(l.a)(e,t),Object(o.a)(e,[{key:"getShaders",value:function(){return this.use64bitProjection()?{vs:"\n#define SHADER_NAME path-layer-vertex-shader-64\n\nattribute vec3 positions;\n\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec4 instanceStartEndPositions64xyLow;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec4 instanceNeighborPositions64xyLow;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec2 instanceDashArrays;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float miterLimit;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vDashArray;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\n\nconst float EPSILON = 0.001;\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\n\nvec3 lineJoin(vec2 prevPoint64[2], vec2 currPoint64[2], vec2 nextPoint64[2]) {\n\n  float widthPixels = clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),\n    widthMinPixels, widthMaxPixels) / 2.0;\n  float width = project_pixel_size(widthPixels);\n\n  vec2 deltaA64[2];\n  vec2 deltaB64[2];\n\n  vec2_sub_fp64(currPoint64, prevPoint64, deltaA64);\n  vec2_sub_fp64(nextPoint64, currPoint64, deltaB64);\n\n  vec2 lengthA64 = vec2_length_fp64(deltaA64);\n  vec2 lengthB64 = vec2_length_fp64(deltaB64);\n\n  vec2 deltaA = vec2(deltaA64[0].x, deltaA64[1].x);\n  vec2 deltaB = vec2(deltaB64[0].x, deltaB64[1].x);\n\n  float lenA = lengthA64.x;\n  float lenB = lengthB64.x;\n\n  vec2 offsetVec;\n  float offsetScale;\n  float offsetDirection;\n  lenA = lenA / width > EPSILON ? lenA : 0.0;\n  lenB = lenB / width > EPSILON ? lenB : 0.0;\n  vec2 dirA = lenA > 0. ? deltaA / lenA : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? deltaB / lenB : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n  vec2 tangent = vec2(dirA + dirB);\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  vec2 perp = mix(perpB, perpA, positions.x);\n  float L = mix(lenB, lenA, positions.x);\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n  bool turnsRight = dirA.x * dirB.y > dirA.y * dirB.x;\n  float cornerPosition = mix(\n    flipIfTrue(turnsRight == (positions.y > 0.0)),\n    0.0,\n    positions.z\n  );\n\n  offsetScale = 1.0 / max(sinHalfA, EPSILON);\n  cornerPosition *= float(cornerPosition <= 0.0 || sinHalfA < min(lenA, lenB) / width * cosHalfA);\n  offsetScale = mix(\n    offsetScale,\n    min(offsetScale, L / width / max(cosHalfA, EPSILON)),\n    float(cornerPosition < 0.0)\n  );\n\n  vMiterLength = mix(\n    offsetScale * cornerPosition,\n    mix(offsetScale, 0.0, cornerPosition),\n    step(0.0, cornerPosition)\n  ) - sinHalfA * jointType;\n  offsetDirection = mix(\n    positions.y,\n    mix(\n      flipIfTrue(turnsRight),\n      positions.y * flipIfTrue(turnsRight == (positions.x == 1.)),\n      cornerPosition\n    ),\n    step(0.0, cornerPosition)\n  );\n  offsetVec = mix(miterVec, -tangent, step(0.5, cornerPosition));\n  offsetScale = mix(offsetScale, 1.0 / max(cosHalfA, 0.001), step(0.5, cornerPosition));\n  float isStartCap = step(lenA, 1.0e-5);\n  float isEndCap = step(lenB, 1.0e-5);\n  float isCap = max(isStartCap, isEndCap);\n  cornerPosition = isCap * (1.0 - positions.z);\n  offsetVec = mix(offsetVec, mix(dirB, perpB, cornerPosition), isStartCap);\n  offsetVec = mix(offsetVec, mix(dirA, perpA, cornerPosition), isEndCap);\n  offsetScale = mix(\n    offsetScale,\n    mix(4.0 * jointType, 1.0, cornerPosition),\n    isCap\n  );\n  vMiterLength = mix(vMiterLength, 1.0 - cornerPosition, isCap);\n\n  offsetDirection = mix(\n    offsetDirection,\n    mix(flipIfTrue(isStartCap > 0.), positions.y, cornerPosition),\n    isCap\n  );\n\n  vCornerOffset = offsetVec * offsetDirection * offsetScale;\n  vDashArray = instanceDashArrays;\n  vPathLength = L / width;\n  float isEnd = positions.x;\n  vec2 offsetFromStartOfPath = mix(vCornerOffset, vCornerOffset + deltaA / width, isEnd);\n  vec2 dir = mix(dirB, dirA, isEnd);\n  vPathPosition = vec2(\n    positions.y + positions.z * offsetDirection,\n    dot(offsetFromStartOfPath, dir)\n  );\n\n  return vec3(vCornerOffset * width, 0.0);\n}\n\nvoid main() {\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  picking_setPickingColor(instancePickingColors);\n\n  float isEnd = positions.x;\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec2 currPosition64xyLow = mix(instanceStartEndPositions64xyLow.xy, instanceStartEndPositions64xyLow.zw, isEnd);\n  vec2 projected_curr_position[2];\n  project_position_fp64(currPosition.xy, currPosition64xyLow, projected_curr_position);\n  float projected_curr_position_z = project_size(currPosition.z);\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec2 prevPosition64xyLow = mix(instanceNeighborPositions64xyLow.xy, instanceStartEndPositions64xyLow.xy, isEnd);\n\n  vec2 projected_prev_position[2];\n  project_position_fp64(prevPosition.xy, prevPosition64xyLow, projected_prev_position);\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec2 nextPosition64xyLow = mix(instanceStartEndPositions64xyLow.zw, instanceNeighborPositions64xyLow.zw, isEnd);\n\n  vec2 projected_next_position[2];\n  project_position_fp64(nextPosition.xy, nextPosition64xyLow, projected_next_position);\n\n  vec3 pos = lineJoin(projected_prev_position, projected_curr_position, projected_next_position);\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = sum_fp64(vec2(pos.x, 0.0), projected_curr_position[0]);\n  vertex_pos_modelspace[1] = sum_fp64(vec2(pos.y, 0.0), projected_curr_position[1]);\n  vertex_pos_modelspace[2] = vec2(pos.z + projected_curr_position_z, 0.0);\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_common_position_to_clipspace_fp64(vertex_pos_modelspace);\n}\n",fs:y,modules:["project64","picking"]}:{vs:"#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec4 instanceStartEndPositions64xyLow;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec4 instanceNeighborPositions64xyLow;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec2 instanceDashArrays;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float miterLimit;\nuniform bool billboard;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vDashArray;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\nvec3 lineJoin(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  float relativePosition, bool isEnd, bool isJoint,\n  vec2 width\n) {\n  vec2 deltaA = (currPoint.xy - prevPoint.xy) / width;\n  vec2 deltaB = (nextPoint.xy - currPoint.xy) / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n  lenA = lenA > EPSILON ? lenA : 0.0;\n  lenB = lenB > EPSILON ? lenB : 0.0;\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n  vec2 tangent = vec2(dirA + dirB);\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  vec2 perp = isEnd ? perpA : perpB;\n  float L = isEnd ? lenA : lenB;\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n\n  bool turnsRight = dirA.x * dirB.y > dirA.y * dirB.x;\n\n  float offsetScale = 1.0 / max(sinHalfA, EPSILON);\n\n  float cornerPosition = isJoint ?\n    0.0 :\n    flipIfTrue(turnsRight == (relativePosition > 0.0));\n  cornerPosition *=\n    float(cornerPosition <= 0.0 || sinHalfA < min(lenA, lenB) * cosHalfA);\n  if (cornerPosition < 0.0) {\n    offsetScale = min(offsetScale, L / max(cosHalfA, EPSILON));\n  }\n\n  vMiterLength = cornerPosition >= 0.0 ?\n    mix(offsetScale, 0.0, cornerPosition) :\n    offsetScale * cornerPosition;\n  vMiterLength -= sinHalfA * jointType;\n\n  float offsetDirection = mix(\n    positions.y,\n    mix(\n      flipIfTrue(turnsRight),\n      positions.y * flipIfTrue(turnsRight == (positions.x == 1.)),\n      cornerPosition\n    ),\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec, -tangent, step(0.5, cornerPosition));\n  offsetScale = mix(offsetScale, 1.0 / max(cosHalfA, 0.001), step(0.5, cornerPosition));\n  bool isStartCap = step(0.0, -lenA) > 0.5;\n  bool isEndCap = step(0.0, -lenB) > 0.5;\n  bool isCap = isStartCap || isEndCap;\n  cornerPosition = isCap ? (1.0 - positions.z) : 0.;\n  if (isStartCap) {\n    offsetVec = mix(dirB, perpB, cornerPosition);\n  }\n  if (isEndCap) {\n    offsetVec = mix(dirA, perpA, cornerPosition);\n  }\n  if (isCap) {\n    offsetScale = mix(4.0 * jointType, 1.0, cornerPosition);\n    vMiterLength = 1.0 - cornerPosition;\n    offsetDirection = mix(flipIfTrue(isStartCap), positions.y, cornerPosition);\n  }\n\n  vCornerOffset = offsetVec * offsetDirection * offsetScale;\n  vDashArray = instanceDashArrays;\n  vPathLength = L;\n  vec2 offsetFromStartOfPath = vCornerOffset;\n  if (isEnd) {\n    offsetFromStartOfPath += deltaA;\n  }\n  vec2 dir = isEnd ? dirA : dirB;\n  vPathPosition = vec2(\n    positions.y + positions.z * offsetDirection,\n    dot(offsetFromStartOfPath, dir)\n  );\n\n  return currPoint + vec3(vCornerOffset * width, 0.0);\n}\nvec3 lineJoin(vec3 prevPoint, vec3 currPoint, vec3 nextPoint) {\n\n  float relativePosition = positions.y;\n  bool isEnd = positions.x > EPSILON;\n  bool isJoint = positions.z > EPSILON;\n\n  vec2 widthPixels = vec2(clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),\n    widthMinPixels, widthMaxPixels) / 2.0);\n\n  return lineJoin(\n    prevPoint, currPoint, nextPoint,\n    relativePosition, isEnd, isJoint,\n    billboard ? project_pixel_size_to_clipspace(widthPixels) : project_pixel_size(widthPixels)\n  );\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  picking_setPickingColor(instancePickingColors);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec2 prevPosition64xyLow = mix(instanceNeighborPositions64xyLow.xy, instanceStartEndPositions64xyLow.xy, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec2 currPosition64xyLow = mix(instanceStartEndPositions64xyLow.xy, instanceStartEndPositions64xyLow.zw, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec2 nextPosition64xyLow = mix(instanceStartEndPositions64xyLow.zw, instanceNeighborPositions64xyLow.zw, isEnd);\n\n  if (billboard) {\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64xyLow, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64xyLow, ZERO_OFFSET);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64xyLow, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    vec3 pos = lineJoin(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w\n    );\n\n    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    prevPosition = project_position(prevPosition, prevPosition64xyLow);\n    currPosition = project_position(currPosition, currPosition64xyLow);\n    nextPosition = project_position(nextPosition, nextPosition64xyLow);\n\n    vec3 pos = lineJoin(prevPosition, currPosition, nextPosition);\n    gl_Position = project_common_position_to_clipspace(vec4(pos, 1.0));\n  }\n}\n",fs:y,modules:["project32","picking"]}}},{key:"initializeState",value:function(){var t=this;this.getAttributeManager().addInstanced({instanceStartPositions:{size:3,transition:P,accessor:"getPath",update:this.calculateStartPositions,noAlloc:!0},instanceEndPositions:{size:3,transition:P,accessor:"getPath",update:this.calculateEndPositions,noAlloc:!0},instanceStartEndPositions64xyLow:{size:4,update:this.calculateInstanceStartEndPositions64xyLow,noAlloc:!0},instanceLeftPositions:{size:3,accessor:"getPath",update:this.calculateLeftPositions,noAlloc:!0},instanceRightPositions:{size:3,accessor:"getPath",update:this.calculateRightPositions,noAlloc:!0},instanceNeighborPositions64xyLow:{size:4,update:this.calculateInstanceNeighborPositions64xyLow,noAlloc:!0},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:P,defaultValue:1},instanceDashArrays:{size:2,accessor:"getDashArray"},instanceColors:{size:4,type:5121,accessor:"getColor",transition:P,defaultValue:x},instancePickingColors:{size:3,type:5121,accessor:function(e,n){var i=n.index,o=n.target;return t.encodePickingColor(i,o)}}}),this.setState({pathTesselator:new g({})})}},{key:"updateState",value:function(t){var n=t.oldProps,i=t.props,o=t.changeFlags;Object(a.a)(Object(s.a)(e.prototype),"updateState",this).call(this,{props:i,oldProps:n,changeFlags:o});var r=this.getAttributeManager();if(o.dataChanged||i.fp64!==n.fp64||o.updateTriggersChanged&&(o.updateTriggersChanged.all||o.updateTriggersChanged.getPath)){var l=this.state.pathTesselator;l.updateGeometry({data:i.data,getGeometry:i.getPath,positionFormat:i.positionFormat,fp64:this.use64bitPositions()}),this.setState({numInstances:l.instanceCount,bufferLayout:l.bufferLayout}),r.invalidateAll()}if(i.fp64!==n.fp64){var c=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(c)}),r.invalidateAll()}}},{key:"draw",value:function(t){var e=t.uniforms,n=this.context.viewport,i=this.props,o=i.rounded,r=i.billboard,s=i.miterLimit,a=i.widthUnits,l=i.widthScale,c=i.widthMinPixels,u=i.widthMaxPixels,p=i.dashJustified,f="pixels"===a?n.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},e,{jointType:Number(o),billboard:r,alignMode:Number(p),widthScale:l*f,miterLimit:s,widthMinPixels:c,widthMaxPixels:u})).draw()}},{key:"_getModel",value:function(t){return new u.a(t,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new p.a({drawMode:4,attributes:{indices:new Uint16Array([0,2,1,1,2,4,1,4,3,3,4,5]),positions:new Float32Array([0,0,1,0,-1,0,0,1,0,1,-1,0,1,1,0,1,0,1])}}),isInstanced:!0,shaderCache:this.context.shaderCache}))}},{key:"calculateStartPositions",value:function(t){var e=this.state.pathTesselator;t.bufferLayout=e.bufferLayout,t.value=e.get("startPositions")}},{key:"calculateEndPositions",value:function(t){var e=this.state.pathTesselator;t.bufferLayout=e.bufferLayout,t.value=e.get("endPositions")}},{key:"calculateInstanceStartEndPositions64xyLow",value:function(t){var e=this.use64bitPositions();t.constant=!e,t.value=e?this.state.pathTesselator.get("startEndPositions64XyLow"):new Float32Array(4)}},{key:"calculateLeftPositions",value:function(t){var e=this.state.pathTesselator;t.value=e.get("leftPositions")}},{key:"calculateRightPositions",value:function(t){var e=this.state.pathTesselator;t.value=e.get("rightPositions")}},{key:"calculateInstanceNeighborPositions64xyLow",value:function(t){var e=this.use64bitPositions();t.constant=!e,t.value=e?this.state.pathTesselator.get("neighborPositions64XyLow"):new Float32Array(4)}},{key:"clearPickingColor",value:function(t){for(var e=this.decodePickingColor(t),n=this.state.pathTesselator.bufferLayout,i=n[e],o=0,r=0;r<e;r++)o+=n[r];var s=this.getAttributeManager().attributes.instancePickingColors,a=s.value,l=o+i;a.fill(0,3*o,3*l),s.update({value:a})}}]),e}(c.a);b.layerName="PathLayer",b.defaultProps=m},287:function(t,e,n){"use strict";var i=n(58),o=n(59),r=n(64),s=n(63),a=n(87),l=n(65),c=n(133),u=n(143),p=n(668),f=n(426),d=n(479);n.d(e,"a",function(){return y});var v=p.a.fp64LowPart,h=[0,0,0,255],g={radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,fp64:!1,filled:!0,getPosition:{type:"accessor",value:function(t){return t.position}},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:h},getLineColor:{type:"accessor",value:h},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}},y=function(t){function e(){return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(l.a)(e,t),Object(o.a)(e,[{key:"getShaders",value:function(t){return{vs:"#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec2 instancePositions64xyLow;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n  float outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64xyLow, offset);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity) / 255.;\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity) / 255.;\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:"#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\n\nvoid main(void) {\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  } \n  if (distToCenter > innerUnitRadius) {\n    gl_FragColor = vLineColor;\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n",modules:[this.use64bitProjection()?"project64":"project32","picking"]}}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,transition:!0,accessor:"getPosition"},instancePositions64xyLow:{size:2,accessor:"getPosition",update:this.calculateInstancePositions64xyLow},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:4,transition:!0,type:5121,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:5121,accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}},{key:"updateState",value:function(t){var n=t.props,i=t.oldProps,o=t.changeFlags;if(Object(a.a)(Object(s.a)(e.prototype),"updateState",this).call(this,{props:n,oldProps:i,changeFlags:o}),n.fp64!==i.fp64){var r=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(r)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(t){var e=t.uniforms,n=this.context.viewport,i=this.props,o=i.radiusScale,r=i.radiusMinPixels,s=i.radiusMaxPixels,a=i.stroked,l=i.filled,c=i.lineWidthUnits,u=i.lineWidthScale,p=i.lineWidthMinPixels,f=i.lineWidthMaxPixels,d="pixels"===c?n.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},e,{stroked:a?1:0,filled:l,radiusScale:o,radiusMinPixels:r,radiusMaxPixels:s,lineWidthScale:u*d,lineWidthMinPixels:p,lineWidthMaxPixels:f})).draw()}},{key:"_getModel",value:function(t){return new f.a(t,Object.assign(this.getShaders(),{id:this.props.id,geometry:new d.a({drawMode:6,vertexCount:4,attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,-1,1,0,1,1,0,1,-1,0])}}}),isInstanced:!0,shaderCache:this.context.shaderCache}))}},{key:"calculateInstancePositions64xyLow",value:function(t,e){var n=e.startRow,i=e.endRow,o=this.use64bitPositions();if(t.constant=!o,o){var r=this.props,s=r.data,a=r.getPosition,l=t.value,u=n*t.size,p=Object(c.a)(s,n,i),f=p.iterable,d=p.objectInfo,h=!0,g=!1,y=void 0;try{for(var x,m=f[Symbol.iterator]();!(h=(x=m.next()).done);h=!0){var P=x.value;d.index++;var b=a(P,d);l[u++]=v(b[0]),l[u++]=v(b[1])}}catch(t){g=!0,y=t}finally{try{h||null==m.return||m.return()}finally{if(g)throw y}}}else t.value=new Float32Array(2)}}]),e}(u.a);y.layerName="ScatterplotLayer",y.defaultProps=g},328:function(t,e,n){var i=n(32);i(i.S+i.F*!n(2),"Object",{defineProperty:n(10).f})},329:function(t,e,n){var i=n(32);i(i.S+i.F*!n(2),"Object",{defineProperties:n(43)})},330:function(t,e,n){var i=n(32),o=n(331),r=n(11),s=n(22),a=n(332);i(i.S,"Object",{getOwnPropertyDescriptors:function(t){for(var e,n,i=r(t),l=s.f,c=o(i),u={},p=0;c.length>p;)void 0!==(n=l(i,e=c[p++]))&&a(u,e,n);return u}})},331:function(t,e,n){var i=n(34),o=n(243),r=n(4),s=n(1).Reflect;t.exports=s&&s.ownKeys||function(t){var e=i.f(r(t)),n=o.f;return n?e.concat(n(t)):e}},332:function(t,e,n){"use strict";var i=n(10),o=n(20);t.exports=function(t,e,n){e in t?i.f(t,e,o(0,n)):t[e]=n}},333:function(t,e,n){"use strict";n.d(e,"a",function(){return r});var i=n(313),o=n.n(i);function r(t,e,n){return e in t?o()(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},57:function(t,e,n){},605:function(t,e,n){"use strict";var i=n(58),o=n(59),r=n(64),s=n(63),a=n(65),l=n(182),c=n(287),u=n(256),p=n(603),f=n(255),d=n(83);function v(t,e,n){var i=t.type,o=t.coordinates,r=e.pointFeatures,s=e.lineFeatures,a=e.polygonFeatures,l=e.polygonOutlineFeatures;if(function(t,e){var n=g[t];d.a.assert(n,"Unknown GeoJSON type ".concat(t));for(;e&&--n>0;)e=e[0];return e&&Number.isFinite(e[0])}(i,o))switch(i){case"Point":r.push({geometry:t,sourceFeature:n});break;case"MultiPoint":o.forEach(function(t){r.push({geometry:{type:"Point",coordinates:t},sourceFeature:n})});break;case"LineString":s.push({geometry:t,sourceFeature:n});break;case"MultiLineString":o.forEach(function(t){s.push({geometry:{type:"LineString",coordinates:t},sourceFeature:n})});break;case"Polygon":a.push({geometry:t,sourceFeature:n}),o.forEach(function(t){l.push({geometry:{type:"LineString",coordinates:t},sourceFeature:n})});break;case"MultiPolygon":o.forEach(function(t){a.push({geometry:{type:"Polygon",coordinates:t},sourceFeature:n}),t.forEach(function(t){l.push({geometry:{type:"LineString",coordinates:t},sourceFeature:n})})})}else d.a.warn("".concat(i," coordinates are malformed"))()}function h(t){return t.sourceFeature.feature}var g={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};n.d(e,"a",function(){return b});var y=new p.a,x={stroked:!0,filled:!0,extruded:!1,wireframe:!1,lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,elevationScale:1,pointRadiusScale:1,pointRadiusMinPixels:0,pointRadiusMaxPixels:Number.MAX_SAFE_INTEGER,lineDashJustified:!1,fp64:!1,getLineColor:{type:"accessor",value:[0,0,0,255]},getFillColor:{type:"accessor",value:[0,0,0,255]},getRadius:{type:"accessor",value:1},getLineWidth:{type:"accessor",value:1},getLineDashArray:{type:"accessor",value:[0,0]},getElevation:{type:"accessor",value:1e3},material:y};function m(t){return t.geometry.coordinates}function P(t){return"function"!=typeof t?t:function(e){return t(h(e))}}var b=function(t){function e(){return Object(i.a)(this,e),Object(r.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(a.a)(e,t),Object(o.a)(e,[{key:"initializeState",value:function(){this.state={features:{}}}},{key:"updateState",value:function(t){t.oldProps;var e=t.props;if(t.changeFlags.dataChanged){var n=function(t){if(Array.isArray(t))return t;switch(d.a.assert(t.type,"GeoJSON does not have type"),t.type){case"Feature":return[t];case"FeatureCollection":return d.a.assert(Array.isArray(t.features),"GeoJSON does not have features array"),t.features;default:return[{geometry:t}]}}(e.data);this.state.features=function(t){for(var e={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},n=0;n<t.length;n++){var i=t[n];d.a.assert(i&&i.geometry,"GeoJSON does not have geometry");var o=i.geometry,r={feature:i,index:n};if("GeometryCollection"===o.type){d.a.assert(Array.isArray(o.geometries),"GeoJSON does not have geometries array");for(var s=o.geometries,a=0;a<s.length;a++){v(s[a],e,r)}}else v(o,e,r)}return e}(n)}}},{key:"getPickingInfo",value:function(t){var e,n=t.info;t.sourceLayer;return Object.assign(n,{object:n.object?h(n.object):n.object,index:n.object?(e=n.object,e.sourceFeature.index):n.index})}},{key:"renderLayers",value:function(){var t=this.state.features,e=t.pointFeatures,n=t.lineFeatures,i=t.polygonFeatures,o=t.polygonOutlineFeatures,r=this.props,s=r.stroked,a=r.filled,l=r.extruded,p=r.wireframe,d=r.material,v=r.transitions,h=this.props,g=h.lineWidthUnits,y=h.lineWidthScale,x=h.lineWidthMinPixels,b=h.lineWidthMaxPixels,C=h.lineJointRounded,L=h.lineMiterLimit,w=h.pointRadiusScale,S=h.pointRadiusMinPixels,_=h.pointRadiusMaxPixels,A=h.elevationScale,O=h.lineDashJustified,E=h.fp64,j=this.props,k=j.getLineColor,M=j.getFillColor,F=j.getRadius,z=j.getLineWidth,T=j.getLineDashArray,N=j.getElevation,R=j.updateTriggers,I=this.getSubLayerClass("polygons-fill",f.a),D=this.getSubLayerClass("polygons-stroke",u.a),W=this.getSubLayerClass("line-strings",u.a),B=this.getSubLayerClass("points",c.a),V=this.shouldRenderSubLayer("polygons-fill",i)&&new I({fp64:E,extruded:l,elevationScale:A,filled:a,wireframe:p,material:d,getElevation:P(N),getFillColor:P(M),getLineColor:P(k),transitions:v&&{getPolygon:v.geometry,getElevation:v.getElevation,getFillColor:v.getFillColor,getLineColor:v.getLineColor}},this.getSubLayerProps({id:"polygons-fill",updateTriggers:{getElevation:R.getElevation,getFillColor:R.getFillColor,getLineColor:R.getLineColor}}),{data:i,getPolygon:m});return[!l&&V,!l&&s&&this.shouldRenderSubLayer("polygons-stroke",o)&&new D({fp64:E,widthUnits:g,widthScale:y,widthMinPixels:x,widthMaxPixels:b,rounded:C,miterLimit:L,dashJustified:O,getColor:P(k),getWidth:P(z),getDashArray:P(T),transitions:v&&{getPath:v.geometry,getColor:v.getLineColor,getWidth:v.getLineWidth}},this.getSubLayerProps({id:"polygons-stroke",updateTriggers:{getColor:R.getLineColor,getWidth:R.getLineWidth,getDashArray:R.getLineDashArray}}),{data:o,getPath:m}),this.shouldRenderSubLayer("linestrings",n)&&new W({fp64:E,widthUnits:g,widthScale:y,widthMinPixels:x,widthMaxPixels:b,rounded:C,miterLimit:L,dashJustified:O,getColor:P(k),getWidth:P(z),getDashArray:P(T),transitions:v&&{getPath:v.geometry,getColor:v.getLineColor,getWidth:v.getLineWidth}},this.getSubLayerProps({id:"line-strings",updateTriggers:{getColor:R.getLineColor,getWidth:R.getLineWidth,getDashArray:R.getLineDashArray}}),{data:n,getPath:m}),this.shouldRenderSubLayer("points",e)&&new B({fp64:E,stroked:s,filled:a,radiusScale:w,radiusMinPixels:S,radiusMaxPixels:_,lineWidthUnits:g,lineWidthScale:y,lineWidthMinPixels:x,lineWidthMaxPixels:b,getFillColor:P(M),getLineColor:P(k),getRadius:P(F),getLineWidth:P(z),transitions:v&&{getPosition:v.geometry,getFillColor:v.getFillColor,getLineColor:v.getLineColor,getRadius:v.getRadius,getLineWidth:v.getLineWidth}},this.getSubLayerProps({id:"points",updateTriggers:{getFillColor:R.getFillColor,getLineColor:R.getLineColor,getRadius:R.getRadius,getLineWidth:R.getLineWidth}}),{data:e,getPosition:m}),l&&V]}}]),e}(l.a);b.layerName="GeoJsonLayer",b.defaultProps=x},61:function(t,e,n){"use strict";var i=n(57);n.n(i).a},62:function(t,e,n){"use strict";n.r(e);n(68),n(69),n(67),n(31);var i=n(75),o=n.n(i),r=n(72),s=n.n(r),a=(n(76),n(73)),l=n(74),c=function(){function t(e){Object(a.a)(this,t),this._className="mapboxgl-ctrl",this._options=Object.assign({},{zoom:1,center:[0,0]},e),this._onClickHome=this._onClickHome.bind(this)}return Object(l.a)(t,[{key:"onAdd",value:function(t){return this._map=t,this._container=u.create("div","".concat(this._className," mapboxgl-ctrl-group")),this._render(),this._container}},{key:"onRemove",value:function(){u.remove(this._container),this._map=void 0}},{key:"_render",value:function(){var t=u.create("button","".concat(this._className,"-icon ").concat(this._className,"-home"),this._container);t.type="button",t.addEventListener("click",this._onClickHome)}},{key:"_onClickHome",value:function(){this._map.easeTo(this._options)}}]),t}(),u={create:function(t,e,n){var i=window.document.createElement(t);return void 0!==e&&(i.className=e),n&&n.appendChild(i),i},remove:function(t){t.parentNode&&t.parentNode.removeChild(t)}},p=(n(77),{name:"base-map",props:{height:{type:Number,default:520},mapOptions:{type:Object},mapClickable:{type:Boolean,default:!0},borderOptions:{type:Object}},data:function(){return{map:null,maploaded:!1,mapDefaultOptions:{container:o()(),style:"mapbox://styles/huanglii/ck1n985b20oan1cmhp4i0o9c9?optimize=true",center:[-74.5,40],zoom:6,minZoom:0,maxZoom:22,scrollZoom:!0,pitch:0,bearing:0,antialias:!1},borderDefaultOptions:{layout:{visibility:"none"},paint:{"line-color":"hsl(357, 67%, 60%)","line-opacity":["step",["zoom"],1,10,0],"line-width":["interpolate",["linear"],["zoom"],0,1,22,3]},beforeId:""}}},computed:{mapContainer:function(){return this.mapOptions.container||this.mapDefaultOptions.container}},mounted:function(){var t=Object.assign({},this.mapDefaultOptions,this.mapOptions);this.initMap(t),window.addEventListener("resize",this.resize)},methods:{initMap:function(t){s.a.accessToken="pk.eyJ1IjoiaHVhbmdsaWkiLCJhIjoiY2pzNHBtendwMDZ2ZDQzbnVmZXdtMDlvdiJ9.GSija86yNNR4ssBtFFpx0g",this.map=new s.a.Map(t),this.map.addControl(new s.a.NavigationControl,"top-left");var e=t.center,n=t.zoom;this.map.addControl(new c({center:e,zoom:n}),"bottom-left"),this.map.addControl(new s.a.FullscreenControl,"top-left"),this.map.on("load",this.handleMapLoaded)},handleMapLoaded:function(t){this.maploaded=!0,this.$emit("load",t.target),this.mapClickable&&this.map.on("click",this.handleMapClick)},handleMapClick:function(t){console.log(t.lngLat);var e=this.map.queryRenderedFeatures(t.point);if(e.length>0){var n=e[0],i=n.layer,o=n.properties;Object.keys(o).length>0&&(new s.a.Popup).setLngLat(t.lngLat).setHTML(this.createPropHtml(i.id,o)).addTo(this.map)}},createPropHtml:function(t,e){return'\n        <div class="title"><b>'.concat(t,'</b></div>\n        <div class="content">\n          ').concat(Object.keys(e).map(function(t){return"".concat("<p><b>".concat(t,": </b>").concat(e[t],"</p>"))}).join(""),"\n        </div>\n      ")},addBorderLayer:function(){var t=Object.assign({},this.borderDefaultOptions,this.borderOptions),e=t.layout,n=t.paint,i=t.beforeId;this.map.addSource("border",{type:"vector",url:"mapbox://huanglii.4nxu8jv0"}),this.map.addLayer({id:"border-2oej0r",source:"border","source-layer":"Border-2oej0r",type:"line",layout:e,paint:n},i||void 0)},resize:function(){this.map.resize()}}}),f=(n(61),n(0)),d=Object(f.a)(p,function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"map-wrapper"},[e("div",{style:{width:"100%",height:this.height+"px",borderRadius:"6px"},attrs:{id:this.mapContainer}},[this._t("custom")],2),this._v(" "),this.maploaded?this._t("default"):this._e()],2)},[],!1,null,null,null);e.default=d.exports},656:function(t,e,n){"use strict";n.r(e);var i=n(62),o=(n(328),n(329),n(330),n(158),n(69),n(31),n(333)),r=(n(68),n(179),n(207)),s=n(605),a=n(282),l=n(208);function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,i)}return n}var u={ACCIDENTS:"https://uber.osgis.cn/uber-common/deck.gl-data/master/examples/highway/accidents.csv",ROADS:"https://uber.osgis.cn/uber-common/deck.gl-data/master/examples/highway/roads.json"};function p(t){var e=t.state,n=t.type,i=t.id;return"".concat(e,"-").concat(n,"-").concat(i)}var f=Object(a.c)().domain([0,12,20,32,84,136,220,400,500,600]).range([[26,152,80],[102,189,99],[166,217,106],[217,239,139],[255,255,191],[254,224,139],[253,174,97],[244,109,67],[215,48,39],[168,0,0]]),d=Object(a.a)().clamp(!0).domain([0,200]).range([10,2e3]),v={latitude:38,longitude:-100,zoom:4,minZoom:2,maxZoom:8};function h(t,e){var n=u.ROADS,i={},a={};return Object(l.a)(u.ACCIDENTS,function(t){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(n,!0).forEach(function(e){Object(o.a)(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(n).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({},t,{incidents:Number(t.incidents),fatalities:Number(t.fatalities)})}).then(function(t){var e;i={},a={},(e=t)&&e.forEach(function(t){var e=i[t.year]=i[t.year]||{},n=a[t.year]=a[t.year]||{},o=p(t);e[o]=t.incidents,n[o]=t.fatalities})}),new r.a({canvas:e,id:e,width:"100%",height:"100%",style:{postion:"relative",top:"0px"},initialViewState:v,controller:!0,onViewStateChange:function(e){var n=e.viewState;t.jumpTo({center:[n.longitude,n.latitude],zoom:n.zoom,bearing:n.bearing,pitch:n.pitch})},layers:[new s.a({id:"geojson",data:n,opacity:1,stroked:!1,filled:!1,lineWidthMinPixels:.5,parameters:{depthTest:!1},getLineColor:function(t){return function(t,e){if(!e)return[200,200,200];var n=(e[p(t.properties)]||0)/t.properties.length*1e3;return f(n)}(t,a[2015])},getLineWidth:function(t){return function(t,e){if(!e)return 10;var n=(e[p(t.properties)]||0)/t.properties.length*1e3;return d(n)}(t,i[2015])},updateTriggers:{getLineColor:{year:2015},getLineWidth:{year:2015}},transitions:{getLineColor:1e3,getLineWidth:1e3}})]})}var g={components:{baseMap:i.default},data:function(){return{mapOptions:{style:"mapbox://styles/huanglii/ck1ocwsbl1fja1cloy67tyefi?optimize=true",center:[-100,38],zoom:4,pitch:50,bearing:0},canvasId:"highway-canvas"}},methods:{handleMapLoaded:function(t){h(t,this.canvasId)}}},y=n(0),x=Object(y.a)(g,function(){var t=this.$createElement,e=this._self._c||t;return e("base-map",{attrs:{"map-options":this.mapOptions},on:{load:this.handleMapLoaded}},[e("canvas",{staticStyle:{"z-index":"2"},attrs:{slot:"custom",id:this.canvasId},slot:"custom"})])},[],!1,null,null,null);e.default=x.exports},78:function(t,e,n){"use strict";var i=n(148),o=n(58),r=n(59),s=n(133),a=function(){function t(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).overAlloc,n=void 0===e?1:e;Object(o.a)(this,t),this.overAlloc=n}return Object(r.a)(t,[{key:"allocate",value:function(t,e,n){var i=n.size,o=n.type,r=n.copy,s=void 0!==r&&r,a=e*i;if(t&&a<=t.length)return t;var l=Math.max(Math.ceil(a*this.overAlloc),1),c=this._allocate(o,l);return t&&s&&c.set(t),this._release(t),c}},{key:"_allocate",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Float32Array,e=arguments.length>1?arguments[1]:void 0;return new t(e)}},{key:"_release",value:function(t){}}]),t}(),l=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};Object(o.a)(this,t);var n=e.attributes,i=void 0===n?{}:n;this.typedArrayManager=new a,this.indexLayout=null,this.bufferLayout=null,this.vertexCount=0,this.instanceCount=0,this.attributes={},this._attributeDefs=i,this.updateGeometry(e),Object.seal(this)}return Object(r.a)(t,[{key:"updateGeometry",value:function(t){var e=t.data,n=t.getGeometry,i=t.positionFormat,o=t.fp64;this.data=e,this.getGeometry=n,this.fp64=o,this.positionSize="XY"===i?2:3,this._rebuildGeometry()}},{key:"updatePartialGeometry",value:function(t){var e=t.startRow,n=t.endRow;this._rebuildGeometry({startRow:e,endRow:n})}},{key:"updateGeometryAttributes",value:function(t,e,n){throw new Error("Not implemented")}},{key:"getGeometrySize",value:function(t){throw new Error("Not implemented")}},{key:"_forEachGeometry",value:function(t,e,n){var i=this.data,o=this.getGeometry,r=Object(s.a)(i,e,n),a=r.iterable,l=r.objectInfo,c=!0,u=!1,p=void 0;try{for(var f,d=a[Symbol.iterator]();!(c=(f=d.next()).done);c=!0){var v=f.value;l.index++,t(o(v,l),l.index)}}catch(t){u=!0,p=t}finally{try{c||null==d.return||d.return()}finally{if(u)throw p}}}},{key:"_rebuildGeometry",value:function(t){var e=this;if(this.data&&this.getGeometry){var n=this.indexLayout,i=this.bufferLayout;t||(n=[],i=[]);var o=t||{},r=o.startRow,s=void 0===r?0:r,a=o.endRow,l=void 0===a?1/0:a;this._forEachGeometry(function(t,n){i[n]=e.getGeometrySize(t)},s,l);var c=0,u=!0,p=!1,f=void 0;try{for(var d,v=i[Symbol.iterator]();!(u=(d=v.next()).done);u=!0){c+=d.value}}catch(t){p=!0,f=t}finally{try{u||null==v.return||v.return()}finally{if(p)throw f}}var h=this.attributes,g=this._attributeDefs,y=this.typedArrayManager,x=this.fp64;for(var m in g){var P=g[m];P.copy=Boolean(t),P.fp64Only&&!x||(h[m]=y.allocate(h[m],c,P))}this.indexLayout=n,this.bufferLayout=i,this.instanceCount=c;for(var b={vertexStart:0,indexStart:0},C=0;C<s;C++)b.vertexStart+=i[C],b.indexStart+=n[C]||0;this._forEachGeometry(function(t,o){var r=i[o];b.geometryIndex=o,b.geometrySize=r,e.updateGeometryAttributes(t,b),b.vertexStart+=r,b.indexStart+=n[o]||0},s,l);for(var L=b.indexStart,w=l;w<n.length;w++)L+=n[w];this.vertexCount=L}}}]),t}(),c=n(267),u=n(236);n.d(e,"a",function(){return p});var p={Tesselator:l,flattenVertices:i.c,fillArray:i.a,count:c.a,memoize:u.a}}}]);